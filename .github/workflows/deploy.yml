name: Build and Deploy via SSH

on:
  # Automatic production deployment (existing behavior)
  push:
    branches: [master]

  # Manual deployment to any environment (NEW - this enables the button)
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - production

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Determine target environment
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            TARGET_ENV="${{ github.event.inputs.environment }}"
          else
            TARGET_ENV="production"
          fi
          echo "TARGET_ENV=${TARGET_ENV}" >> $GITHUB_ENV
          echo "üéØ Deploying to: ${TARGET_ENV}"

      - name: Set environment variables for build
        run: |
          # Get version from package.json
          VERSION=$(node -p "require('./package.json').version")
          echo "VITE_REACT_APP_VERSION=${VERSION}" >> $GITHUB_ENV

          # Get git commit hash (short form)
          GIT_HASH=$(git rev-parse --short HEAD)
          echo "VITE_REACT_APP_GIT_HASH=${GIT_HASH}" >> $GITHUB_ENV
          echo "üìù Building version ${VERSION}-${GIT_HASH}"

          if [[ "${{ env.TARGET_ENV }}" == "production" ]]; then
            echo "VITE_APP_ENVIRONMENT=production" >> $GITHUB_ENV
            echo "VITE_APP_BASE_URL=https://reborn-fansite.com" >> $GITHUB_ENV
            echo "WEB_PUBLIC_DIR=${{ secrets.WEB_PUBLIC_DIR }}" >> $GITHUB_ENV
          else
            echo "VITE_APP_ENVIRONMENT=development" >> $GITHUB_ENV
            echo "VITE_APP_BASE_URL=https://dev.reborn-fansite.com" >> $GITHUB_ENV
            echo "WEB_PUBLIC_DIR=${{ secrets.DEV_WEB_PUBLIC_DIR }}" >> $GITHUB_ENV
          fi

          # Tinify API key for image optimization during build
          echo "TINIFY_API_KEY=${{ secrets.TINIFY_API_KEY }}" >> $GITHUB_ENV

      - name: Run tests and lint
        run: |
          npm run type-check
          npm run lint

      - name: Build project
        run: npm run build

      - name: Deploy to server via rsync
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr --delete
          path: dist/
          remote_path: ${{ env.WEB_PUBLIC_DIR }}
          remote_host: ${{ secrets.SSH_HOST }}
          remote_user: ${{ secrets.SSH_USERNAME }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deployment summary
        run: |
          echo "‚úÖ Successfully deployed to ${{ env.TARGET_ENV }}"
          echo "üì¶ Version: ${VITE_REACT_APP_VERSION}-${VITE_REACT_APP_GIT_HASH}"
          if [[ "${{ env.TARGET_ENV }}" == "production" ]]; then
            echo "üåê Live at: https://reborn-fansite.com"
          else
            echo "üß™ Live at: https://dev.reborn-fansite.com"
          fi
